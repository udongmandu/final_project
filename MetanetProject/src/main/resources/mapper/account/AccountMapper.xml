<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "../mybatis-3-mapper.dtd">

<mapper namespace="com.classpick.web.account.dao.IAccountRepository">

	<select id="getLecture" resultType="com.classpick.web.account.model.AccountLecture">
		SELECT l.title as title, l.profile as profile, l.category as category, a.is_coursable as isCoursable
		FROM lectures l
		JOIN attends a ON l.lecture_id = a.lecture_id
		WHERE a.member_id =#{memberId}
	</select>	
	
	<insert id="insertCategory">
		INSERT INTO members_tags (member_id, tag_id)
		VALUES (#{memberId}, (SELECT tag_id FROM tags WHERE tag_name = #{tagName}));
	</insert>
	
	<update id="updateProfile">
		UPDATE members
		SET profile = #{fileUrl}
		WHERE member_id = #{memberUID}
	</update>
	
	<select id="getMyPage" resultType="com.classpick.web.member.model.Member">
		SELECT * FROM members WHERE member_id = #{memberUID}
	</select>	
	
	<select id="getAllStudent" resultType="int">
		SELECT COUNT(*)
		FROM students
		WHERE lecture_list_id = #{lecutre_list_id}
	</select>
	
	<select id="getPaylog" resultType="com.classpick.web.account.model.Pay">
		SELECT p.pay_id as payId, p.status as status, p.price as price, l.start_date as startDate, l.end_date as endDate
		FROM attends a
		JOIN lectures l ON l.lecture_id = a.lecture_id
		JOIN pays p ON p.lecture_id = a.lecture_id
		WHERE a.member_id = #{memberUID}
	</select>
	
	<select id="getMyStudy" resultType="com.classpick.web.account.model.MyStudy">
		SELECT   
			lec.lecture_id as lectureId,
		    lec.title as title,
		    lec.start_date as startTime,
		    lec.end_date as endTime,
		    COUNT(CASE WHEN s.is_attend = TRUE THEN 1 END) * 100 / COUNT(*) AS attendPercent
		FROM students s
		JOIN lecture_lists l ON s.lecture_list_id = l.lecture_list_id
		JOIN members m ON s.member_id = m.member_id
		JOIN lectures lec ON l.lecture_id = lec.lecture_id 
		WHERE m.member_id = #{memberUID}
		GROUP BY m.member_id, m.name, l.lecture_id, lec.title
		ORDER BY m.member_id, l.lecture_id;
	</select>
	
	<select id="getMyStudyLectureList" resultType="com.classpick.web.account.model.MyStudyLectureList">
		SELECT l.lecture_list_id as lectureListId, l.title, s.is_attend as isAttend, l.end_time as endTime, l.start_time as startTime, lec.lecture_id as lectureId
		FROM students s
		JOIN lecture_lists l ON s.lecture_list_id = l.lecture_list_id
		JOIN lectures lec ON l.lecture_id = lec.lecture_id 
		WHERE s.member_id =#{memberUID} AND lec.lecture_id =#{lecture_id};	
	</select>
	
	
	<select id="getDueToLectures" resultType="com.classpick.web.account.model.DueToLecture">
		SELECT title, start_date as startDate, end_date as endDate
		FROM lectures 
		WHERE member_id =#{teacherId}
	</select>
	
	<select id="getIngLectures" resultType="com.classpick.web.account.model.IngLecture">
	    <![CDATA[
	    SELECT
	        lec.lecture_id as lectureId,
	        ll.title AS title,
	        ll.start_time as startTime,
	        ll.end_time as endTime,
	        (SUM(CASE WHEN s.is_attend = TRUE THEN 1 ELSE 0 END) * 100.0 / NULLIF(COUNT(DISTINCT s.member_id), 0)) AS attendPercent
	    FROM lectures lec
	    JOIN lecture_lists ll ON lec.lecture_id = ll.lecture_id
	    LEFT JOIN students s ON ll.lecture_list_id = s.lecture_list_id
	    WHERE lec.member_id = #{teacherId}
	    AND DATE(lec.start_date) <= CURDATE()
	    AND DATE(lec.end_date) >= CURDATE()
	    GROUP BY ll.lecture_list_id, lec.lecture_id, ll.title, ll.start_time, ll.end_time, lec.start_date, lec.end_date;
	    ]]>
	</select>

	
	<select id="getEndLectues" resultType="com.classpick.web.account.model.EndLecture">
	<![CDATA[
	    SELECT
	        l.title AS title,
	        l.start_date as startDate,
	        l.end_date as endDate,
	        l.lecture_id as lectureId,
	        (SUM(CASE WHEN a.is_coursable = TRUE THEN 1 ELSE 0 END) * 100.0) /
	        NULLIF(COUNT(DISTINCT a.member_id), 0) AS coursePercent
	    FROM lectures l
	    JOIN attends a ON l.lecture_id = a.lecture_id
	    WHERE a.member_id = #{teacherId}
	    AND DATE(l.end_date) < CURDATE()
	    GROUP BY l.lecture_id, l.title, l.start_date, l.end_date;
	]]>  
	</select>


</mapper>