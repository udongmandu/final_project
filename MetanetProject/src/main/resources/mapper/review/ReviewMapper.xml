<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "../mybatis-3-mapper.dtd">

<mapper namespace="com.classpick.web.review.dao.IReviewRepository">

	<insert id="registerReview" parameterType="com.classpick.web.review.model.Review" >
	<![CDATA[
        INSERT INTO reviews (lecture_id, member_id, content, answer_id)
        VALUES ( #{lectureId} , #{memberId} , #{content} , #{answerId} )
    ]]>
	</insert>

    <select id="getReviews" parameterType="Long" resultType="com.classpick.web.review.model.Review">
    <![CDATA[
    SELECT 
        l.review_id as reviewId, 
        l.lecture_id as lectureId, 
        l.member_id as memberId, 
        k.profile, 
        l.content, 
        l.review_date as reviewDate, 
        l.answer_id as answerId
    FROM reviews l
    JOIN members k ON l.member_id = k.member_id
    LEFT JOIN reviews p ON l.answer_id = p.review_id
    WHERE l.deleted = 0 AND l.lecture_id = #{lectureId}
    ORDER BY
        COALESCE(p.review_date, l.review_date) DESC,
        CASE WHEN l.answer_id IS NULL THEN 0 ELSE 1 END,
        l.review_date ASC
	]]>
    </select>

    <update id="updateReview" parameterType="com.classpick.web.review.model.Review">
    <![CDATA[
        UPDATE reviews
        SET content = #{content}
        WHERE review_id = #{reviewId} AND member_id = #{memberId}
    ]]>
    </update>

    <delete id="deleteReview" parameterType="com.classpick.web.review.model.Review">
    <![CDATA[
        UPDATE reviews
        SET deleted = 1
        WHERE review_id = #{reviewId} 
          AND lecture_id = #{lectureId} 
          AND member_id = #{memberId}
    ]]>
    </delete>

</mapper>